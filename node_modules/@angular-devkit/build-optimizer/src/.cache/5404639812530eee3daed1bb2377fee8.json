{"remainingRequest":"C:\\Users\\PC\\Documents\\GitHub\\angular-routing-example-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\PC\\Documents\\GitHub\\angular-routing-example-master\\node_modules\\contentful\\dist\\es-modules\\create-global-options.js","dependencies":[{"path":"C:\\Users\\PC\\Documents\\GitHub\\angular-routing-example-master\\node_modules\\contentful\\dist\\es-modules\\create-global-options.js","mtime":499162500000},{"path":"C:\\Users\\PC\\Documents\\GitHub\\angular-routing-example-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\Documents\\GitHub\\angular-routing-example-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/**\n * Link resolution can be set globally, or it can be turned off for the methods\n * which make use of it. The local setting always overrides the global setting.\n * @private\n * @param {boolean} globalSetting - Global library setting for link resolution\n * @returns {function} Link resolver method preconfigured with global setting\n */\nexport default function createGlobalOptions(globalSettings) {\n  /**\n   * Link resolver method\n   * @param {Object} query - regular query object used for collection endpoints\n   */\n  return function getGlobalOptions(query) {\n    return Object.assign({}, globalSettings, query);\n  };\n}",null]}